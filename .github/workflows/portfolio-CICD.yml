name: Portfolio CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Code Quality and Validation
  validate:
    name: Validate Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install HTML/CSS/JS validators
      run: |
        npm install -g html-validate
        npm install -g stylelint
        npm install -g eslint
        
    - name: Validate HTML
      run: |
        html-validate index.html
        
    - name: Validate CSS
      run: |
        npx stylelint style.css --config '{"rules": {"color-no-invalid-hex": true, "font-family-no-duplicate-names": true, "function-calc-no-unspaced-operator": true}}'
        
    - name: Validate JavaScript
      run: |
        npx eslint script.js --config '{"env": {"browser": true, "es2021": true}, "extends": ["eslint:recommended"], "parserOptions": {"ecmaVersion": "latest", "sourceType": "module"}}'

  # Security Scan
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # Performance Testing
  performance:
    name: Performance Testing
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli@0.12.x
      
    - name: Start local server
      run: |
        python3 -m http.server 8000 &
        sleep 5
        
    - name: Run Lighthouse CI
      run: |
        lhci autorun --collect.url=http://localhost:8000 --assert.assertions.performance=0.8 --assert.assertions.accessibility=0.9 --assert.assertions.best-practices=0.8 --assert.assertions.seo=0.8

  # Build and Deploy
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [validate, security, performance]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    permissions:
      contents: read
      pages: write
      id-token: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # Notify on Success/Failure
  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()
    
    steps:
    - name: Notify Success
      if: needs.deploy.result == 'success'
      run: |
        echo "‚úÖ Portfolio successfully deployed to GitHub Pages!"
        echo "üåê Your site is now live at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
        
    - name: Notify Failure
      if: needs.deploy.result == 'failure'
      run: |
        echo "‚ùå Portfolio deployment failed!"
        echo "Please check the logs for more details."
