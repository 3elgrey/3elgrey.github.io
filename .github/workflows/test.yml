name: CI - Test & Quality Checks

on:
  push:
    branches: [ main, develop, uat ]
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

# Cancel in-progress runs for the same workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install
    
    - name: Run unit tests
      run: npm test
    
    - name: Run tests with coverage
      run: npm run test:coverage
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: always()
      with:
        fail_ci_if_error: false
    
    - name: Test Summary
      uses: test-summary/action@v2
      with:
        paths: "coverage/lcov.info"
      if: always()

  validate-structure:
    name: Validate Project Structure
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Validate HTML structure
      run: |
        if [ -f "index.html" ]; then
          echo "‚úÖ index.html found"
          # Basic HTML validation
          if grep -q "<!DOCTYPE html>" index.html; then
            echo "‚úÖ Valid HTML5 DOCTYPE"
          else
            echo "‚ùå Missing or invalid DOCTYPE"
            exit 1
          fi
        else
          echo "‚ùå index.html not found"
          exit 1
        fi
    
    - name: Check required files
      run: |
        echo "üìÅ Checking project structure..."
        required_files=("index.html" "style.css" "script.js" "package.json")
        missing_files=()
        
        for file in "${required_files[@]}"; do
          if [ -f "$file" ]; then
            echo "‚úÖ $file found"
          else
            echo "‚ùå $file not found"
            missing_files+=("$file")
          fi
        done
        
        if [ ${#missing_files[@]} -ne 0 ]; then
          echo "‚ùå Missing required files: ${missing_files[*]}"
          exit 1
        fi
        echo "‚úÖ All required files present"
    
    - name: Validate CSS syntax
      run: |
        if [ -f "style.css" ]; then
          echo "‚úÖ CSS file found"
          # Basic CSS validation
          if grep -q "body\s*{" style.css; then
            echo "‚úÖ CSS appears to have basic structure"
          else
            echo "‚ö†Ô∏è CSS may be missing basic body styles"
          fi
        fi
    
    - name: Validate JavaScript syntax
      run: |
        if [ -f "script.js" ]; then
          echo "‚úÖ JavaScript file found"
          # Basic JS validation using Node.js
          node -c script.js
          echo "‚úÖ JavaScript syntax is valid"
        fi

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install
    
    - name: Run security audit
      run: npm audit --audit-level=moderate
    
    - name: Check for known vulnerabilities
      run: |
        if npm audit --audit-level=high --parseable | grep -q ""; then
          echo "‚ùå High severity vulnerabilities found"
          npm audit --audit-level=high
          exit 1
        else
          echo "‚úÖ No high severity vulnerabilities found"
        fi

  # This job will only run if all other jobs pass
  tests-passed:
    name: All Tests Passed
    runs-on: ubuntu-latest
    needs: [test, validate-structure, security-scan]
    if: always()
    
    steps:
    - name: Check test results
      run: |
        if [[ "${{ needs.test.result }}" == "success" && 
              "${{ needs.validate-structure.result }}" == "success" && 
              "${{ needs.security-scan.result }}" == "success" ]]; then
          echo "‚úÖ All tests passed successfully!"
          echo "üöÄ Ready for deployment"
        else
          echo "‚ùå Some tests failed:"
          echo "  - Unit Tests: ${{ needs.test.result }}"
          echo "  - Structure Validation: ${{ needs.validate-structure.result }}"
          echo "  - Security Scan: ${{ needs.security-scan.result }}"
          exit 1
        fi
